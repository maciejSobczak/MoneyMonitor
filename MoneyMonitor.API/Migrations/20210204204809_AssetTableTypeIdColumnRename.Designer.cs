// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoneyMonitor.API.Persistence.Contexts;

namespace MoneyMonitor.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210204204809_AssetTableTypeIdColumnRename")]
    partial class AssetTableTypeIdColumnRename
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("MoneyMonitor.API.Domain.Models.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Assets");

                    b.HasData(
                        new
                        {
                            Id = 4,
                            Name = "United States of America Dollar",
                            ShortName = "USD",
                            TypeId = 3
                        },
                        new
                        {
                            Id = 5,
                            Name = "Bitcoin crypto currency",
                            ShortName = "BTC",
                            TypeId = 1
                        });
                });

            modelBuilder.Entity("MoneyMonitor.API.Domain.Models.AssetType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("AssetTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "crypto currency"
                        },
                        new
                        {
                            Id = 2,
                            Name = "share"
                        },
                        new
                        {
                            Id = 3,
                            Name = "foreign currency"
                        });
                });

            modelBuilder.Entity("MoneyMonitor.API.Domain.Models.Deal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<float>("AdditionalCosts")
                        .HasColumnType("real");

                    b.Property<string>("AdditionalInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("AssetId")
                        .HasColumnType("int");

                    b.Property<string>("BaseCurrency")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<byte>("OperationType")
                        .HasColumnType("tinyint");

                    b.Property<float>("Value")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.ToTable("Deals");
                });

            modelBuilder.Entity("MoneyMonitor.API.Domain.Models.Asset", b =>
                {
                    b.HasOne("MoneyMonitor.API.Domain.Models.AssetType", "AssetType")
                        .WithMany("Assets")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssetType");
                });

            modelBuilder.Entity("MoneyMonitor.API.Domain.Models.Deal", b =>
                {
                    b.HasOne("MoneyMonitor.API.Domain.Models.Asset", "Asset")
                        .WithMany("Deals")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("MoneyMonitor.API.Domain.Models.Asset", b =>
                {
                    b.Navigation("Deals");
                });

            modelBuilder.Entity("MoneyMonitor.API.Domain.Models.AssetType", b =>
                {
                    b.Navigation("Assets");
                });
#pragma warning restore 612, 618
        }
    }
}
